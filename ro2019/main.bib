
@article{mcphillips2015yesworkflowa,
  title = {\href{https://doi.org/10.2218/ijdc.v10i1.370}{{{YesWorkflow}}: {{A User}}-{{Oriented}}, {{Language}}-{{Independent Tool}} for {{Recovering Workflow Information}} from {{Scripts}}}},
  volume = {10},
  abstract = {Scientific workflow management systems offer features for composing complex computational pipelines from modular building blocks, executing the resulting automated workflows, and recording the provenance of data products resulting from workflow runs. Despite the advantages such features provide, many automated workflows continue to be implemented and executed outside of scientific workflow systems due to the convenience and familiarity of scripting languages (such as Perl, Python, R, and MATLAB), and to the high productivity many scientists experience when using these languages. YesWorkflow is a set of software tools that aim to provide such users of scripting languages with many of the benefits of scientific workflow systems. YesWorkflow requires neither the use of a workflow engine nor the overhead of adapting code to run effectively in such a system. Instead, YesWorkflow enables scientists to annotate existing scripts with special comments that reveal the computational modules and dataflows otherwise implicit in these scripts. YesWorkflow tools extract and analyze these comments, represent the scripts in terms of entities based on the typical scientific workflow model, and provide graphical renderings of this workflow-like view of the scripts. Future version of YesWorkflow will also allow the prospective provenance of the data products of these scripts to be queried in ways similar to those available to users of scientific workflow systems.},
  journal = {Intl\. J.\ of Digital Curation},
  url = {http://www.ijdc.net/index.php/ijdc/article/view/10.1.298},
  author = {McPhillips, Timothy and Song, Tianhong and Kolisnik, Tyler and Aulenbach, Steve and Belhajjame, Khalid and Bocinsky, R. Kyle and Cao, Yang and Cheney, James and Chirigati, Fernando and Dey, Saumen and Freire, Juliana and Jones, Christopher and Hanken, James and Kintigh, Keith W. and Kohler, Timothy A. and Koop, David and Macklin, James A. and Missier, Paolo and Schildhauer, Mark and Schwalm, Christopher and Wei, Yaxing and Bieda, Mark and Lud\"ascher, Bertram},
  year = {2015},
  pages = {298-313},
}

@article{brinckman2019computing,
  title = {\href{https://doi.org/10.1016/j.future.2017.12.029}{Computing Environments for Reproducibility: {{Capturing}} the ``{{Whole Tale}}''}},
  volume = {94},
  issn = {0167-739X},
  shorttitle = {Computing Environments for Reproducibility},
  doi = {10.1016/j.future.2017.12.029},
  abstract = {The act of sharing scientific knowledge is rapidly evolving away from traditional articles and presentations to the delivery of executable objects that integrate the data and computational details (e.g., scripts and workflows) upon which the findings rely. This envisioned coupling of data and process is essential to advancing science but faces technical and institutional barriers. The Whole Tale~project aims to address these barriers by connecting computational, data-intensive research efforts with the larger research process\textemdash{}transforming the knowledge discovery and dissemination process into one where data products are united with research articles to create ``living publications'' or tales. The Whole Tale~focuses on the full spectrum of science, empowering users in the long tail of science, and power users with demands for access to big data and compute resources. We report here on the design, architecture, and implementation of the Whole Tale~environment.},
  urldate = {2019-02-18},
  journal = {FGCS},
  url = {http://www.sciencedirect.com/science/article/pii/S0167739X17310695},
  author = {Brinckman, Adam and Chard, Kyle and Gaffney, Niall and Hategan, Mihael and Jones, Matthew B. and Kowalik, Kacper and Kulasekaran, Sivakumar and Lud\"ascher, Bertram and Mecum, Bryce D. and Nabrzyski, Jarek and Stodden, Victoria and Taylor, Ian J. and Turk, Matthew J. and Turner, Kandace},
  year = {2019},
  keywords = {Provenance,Code sharing,Data sharing,Living publications,Reproducibility},
  pages = {854-867},
  file = {/Users/ludaesch/Dropbox/zotero/storage/KLFKJKA6/Brinckman et al. - 2019 - Computing environments for reproducibility Captur.pdf;/Users/ludaesch/Dropbox/zotero/storage/KUSYCIYQ/Brinckman et al. - 2018 - Computing environments for reproducibility Captur.pdf;/Users/ludaesch/Dropbox/zotero/storage/J6LW73BC/S0167739X17310695.html;/Users/ludaesch/Dropbox/zotero/storage/TQXF6RVN/S0167739X17310695.html}
}




@book{verborgh_using_2013,
	address = {Birmingham Mumbai},
	series = {Community experience distilled},
	title = {Using {OpenRefine}},
	isbn = {978-1-78328-908-0},
	shorttitle = {Using {OpenRefine}},
	language = {en},
	publisher = {Packt Publishing},
	author = {Verborgh, Ruben and De Wilde, Max},
	year = {2013},
	file = {Verborgh and De Wilde - 2013 - Using OpenRefine the essential OpenRefine guide t.pdf:/Users/tmcphill/Zotero/storage/QPSPISA9/Verborgh and De Wilde - 2013 - Using OpenRefine the essential OpenRefine guide t.pdf:application/pdf}
}

@Misc{makepeace18ORclient,
  author = 	 {Paul Makepeace and Felix Lohmeier},
  title = 	 {{OpenRefine} {Python} Client Library},
  howpublished = {\url{https://github.com/opencultureconsulting/openrefine-client}},
  year = 	 2018}


@Misc{Binder_2018,
  author = 	 {Jupyter-Project},
  title = 	 {\href{https://doi.org/10.25080/Majora-4af1f417-011}{Binder 2.0 - Reproducible, Interactive, Sharable Environments for Science at Scale}},
  howpublished = {17th Python in Science Conference},
  year = 	 2018}

@Misc{OpenRefine,
  key = 	 {OR},
  title = 	 {{OpenRefine}: A free, open source, powerful tool for working with messy data},
  year = 	 2018,
  howpublished = 	 {\url{http://openrefine.org/}}}

@Misc{yw-website,
key = {YW},
title = {\textsf{YesWorkflow} project site and README},
howpublished = {\href{http://yesworkflow.org/yw-prototypes}{yesworkflow.org/yw-prototypes}},
year=2018
}

@InProceedings{mcphillips2015ywIDCC,
  author    = {Timothy M. McPhillips and
               Tianhong Song and
               Tyler Kolisnik and
               Steve Aulenbach and
               Khalid Belhajjame and
               Kyle Bocinsky and
               Yang Cao and
               Fernando Chirigati and
               Saumen C. Dey and
               Juliana Freire and
               Deborah N. Huntzinger and
               Christopher Jones and
               David Koop and
               Paolo Missier and
               Mark Schildhauer and
               Christopher R. Schwalm and
               Yaxing Wei and
               James Cheney and
               Mark Bieda and
               Bertram Lud{\"{a}}scher},
  title     = {\textsf{YesWorkflow}: {A} User-Oriented, Language-Independent Tool for Recovering
               Workflow Information from Scripts},
  booktitle   = {10th Intl.\ Digital Curation Conference (IDCC)},
    year      = 2015,
  month = {February},
  address = {London},
  note       = {to appear in IJDC. Preprint: \href{http://arxiv.org/abs/1502.02403}{arxiv.org/abs/1502.02403}},
}

@Misc{xsb_software,
  key = 	 {XSB Group},
  title = 	 {\href{https://sourceforge.net/projects/xsb/}{The XSB logic programming system, version 3.7}},
  year = 	 2017,
}

@Misc{openrefine-provenance-repo,
    key = {openrefine-provenance-repo},
    howpublished = {\href{https://github.com/idaks/openrefine-provenance}{https://github.com/idaks/openrefine-provenance}}
 }

@Misc{openrefine-reproducibility-repo,
    key = {openrefine-reproducibility-repo},
    howpublished = {\href{https://github.com/idaks/openrefine-reproducibility}{https://github.com/idaks/openrefine-reproducibility}}
  }
  
